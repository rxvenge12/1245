<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="hellodbDataSet" targetNamespace="http://tempuri.org/hellodbDataSet.xsd" xmlns:mstns="http://tempuri.org/hellodbDataSet.xsd" xmlns="http://tempuri.org/hellodbDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="hellodbConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="hellodbConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.WindowsFormsApp9.Properties.Settings.GlobalReference.Default.hellodbConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DisciplinesTableAdapter" GeneratorDataComponentClassName="DisciplinesTableAdapter" Name="Disciplines" UserDataComponentName="DisciplinesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="hellodbConnectionString (Settings)" DbObjectName="dbo.Disciplines" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Disciplines] WHERE (([DisciplineId] = @Original_DisciplineId) AND ([DisciplineName] = @Original_DisciplineName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DisciplineId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DisciplineId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_DisciplineName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="DisciplineName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Disciplines] ([DisciplineName]) VALUES (@DisciplineName);
SELECT DisciplineId, DisciplineName FROM Disciplines WHERE (DisciplineId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@DisciplineName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="DisciplineName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT DisciplineId, DisciplineName FROM dbo.Disciplines</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Disciplines] SET [DisciplineName] = @DisciplineName WHERE (([DisciplineId] = @Original_DisciplineId) AND ([DisciplineName] = @Original_DisciplineName));
SELECT DisciplineId, DisciplineName FROM Disciplines WHERE (DisciplineId = @DisciplineId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@DisciplineName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="DisciplineName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DisciplineId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DisciplineId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_DisciplineName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="DisciplineName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="DisciplineId" ColumnName="DisciplineId" DataSourceName="[C:\USERS\MIYAGIFN\SOURCE\REPOS\WINDOWSFORMSAPP9\WINDOWSFORMSAPP9\HELLODB.MDF].dbo.Disciplines" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@DisciplineId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="DisciplineId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="DisciplineId" DataSetColumn="DisciplineId" />
              <Mapping SourceColumn="DisciplineName" DataSetColumn="DisciplineName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ExamResultsTableAdapter" GeneratorDataComponentClassName="ExamResultsTableAdapter" Name="ExamResults" UserDataComponentName="ExamResultsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="hellodbConnectionString (Settings)" DbObjectName="dbo.ExamResults" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ExamResults] WHERE (([ResultId] = @Original_ResultId) AND ([StudentId] = @Original_StudentId) AND ([DisciplineId] = @Original_DisciplineId) AND ([Grade] = @Original_Grade))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ResultId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ResultId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DisciplineId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DisciplineId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Grade" Precision="5" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Grade" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ExamResults] ([StudentId], [DisciplineId], [Grade]) VALUES (@StudentId, @DisciplineId, @Grade);
SELECT ResultId, StudentId, DisciplineId, Grade FROM ExamResults WHERE (ResultId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StudentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@DisciplineId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DisciplineId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Grade" Precision="5" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Grade" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ResultId, StudentId, DisciplineId, Grade FROM dbo.ExamResults</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ExamResults] SET [StudentId] = @StudentId, [DisciplineId] = @DisciplineId, [Grade] = @Grade WHERE (([ResultId] = @Original_ResultId) AND ([StudentId] = @Original_StudentId) AND ([DisciplineId] = @Original_DisciplineId) AND ([Grade] = @Original_Grade));
SELECT ResultId, StudentId, DisciplineId, Grade FROM ExamResults WHERE (ResultId = @ResultId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StudentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@DisciplineId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DisciplineId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Grade" Precision="5" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Grade" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ResultId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ResultId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_DisciplineId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="DisciplineId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Grade" Precision="5" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Grade" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ResultId" ColumnName="ResultId" DataSourceName="[C:\USERS\MIYAGIFN\SOURCE\REPOS\WINDOWSFORMSAPP9\WINDOWSFORMSAPP9\HELLODB.MDF].dbo.ExamResults" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ResultId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ResultId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ResultId" DataSetColumn="ResultId" />
              <Mapping SourceColumn="StudentId" DataSetColumn="StudentId" />
              <Mapping SourceColumn="DisciplineId" DataSetColumn="DisciplineId" />
              <Mapping SourceColumn="Grade" DataSetColumn="Grade" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GroupsTableAdapter" GeneratorDataComponentClassName="GroupsTableAdapter" Name="Groups" UserDataComponentName="GroupsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="hellodbConnectionString (Settings)" DbObjectName="dbo.Groups" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Groups] WHERE (([GroupId] = @Original_GroupId) AND ([GroupNumber] = @Original_GroupNumber))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_GroupNumber" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GroupNumber" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Groups] ([GroupNumber]) VALUES (@GroupNumber);
SELECT GroupId, GroupNumber FROM Groups WHERE (GroupId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@GroupNumber" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GroupNumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT GroupId, GroupNumber FROM dbo.Groups</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Groups] SET [GroupNumber] = @GroupNumber WHERE (([GroupId] = @Original_GroupId) AND ([GroupNumber] = @Original_GroupNumber));
SELECT GroupId, GroupNumber FROM Groups WHERE (GroupId = @GroupId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@GroupNumber" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GroupNumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_GroupNumber" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GroupNumber" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="GroupId" ColumnName="GroupId" DataSourceName="[C:\USERS\MIYAGIFN\SOURCE\REPOS\WINDOWSFORMSAPP9\WINDOWSFORMSAPP9\HELLODB.MDF].dbo.Groups" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@GroupId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="GroupId" DataSetColumn="GroupId" />
              <Mapping SourceColumn="GroupNumber" DataSetColumn="GroupNumber" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentsTableAdapter" GeneratorDataComponentClassName="StudentsTableAdapter" Name="Students" UserDataComponentName="StudentsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="hellodbConnectionString (Settings)" DbObjectName="dbo.Students" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Students] WHERE (([StudentId] = @Original_StudentId) AND ([FullName] = @Original_FullName) AND ([GroupId] = @Original_GroupId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_FullName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FullName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Students] ([FullName], [GroupId]) VALUES (@FullName, @GroupId);
SELECT StudentId, FullName, GroupId FROM Students WHERE (StudentId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FullName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FullName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT StudentId, FullName, GroupId FROM dbo.Students</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Students] SET [FullName] = @FullName, [GroupId] = @GroupId WHERE (([StudentId] = @Original_StudentId) AND ([FullName] = @Original_FullName) AND ([GroupId] = @Original_GroupId));
SELECT StudentId, FullName, GroupId FROM Students WHERE (StudentId = @StudentId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@FullName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FullName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StudentId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_FullName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="FullName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GroupId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GroupId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="StudentId" ColumnName="StudentId" DataSourceName="[C:\USERS\MIYAGIFN\SOURCE\REPOS\WINDOWSFORMSAPP9\WINDOWSFORMSAPP9\HELLODB.MDF].dbo.Students" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@StudentId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="StudentId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="StudentId" DataSetColumn="StudentId" />
              <Mapping SourceColumn="FullName" DataSetColumn="FullName" />
              <Mapping SourceColumn="GroupId" DataSetColumn="GroupId" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="hellodbDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="hellodbDataSet" msprop:Generator_DataSetName="hellodbDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Disciplines" msprop:Generator_RowEvHandlerName="DisciplinesRowChangeEventHandler" msprop:Generator_RowDeletedName="DisciplinesRowDeleted" msprop:Generator_RowDeletingName="DisciplinesRowDeleting" msprop:Generator_RowEvArgName="DisciplinesRowChangeEvent" msprop:Generator_TablePropName="Disciplines" msprop:Generator_RowChangedName="DisciplinesRowChanged" msprop:Generator_RowChangingName="DisciplinesRowChanging" msprop:Generator_TableClassName="DisciplinesDataTable" msprop:Generator_RowClassName="DisciplinesRow" msprop:Generator_TableVarName="tableDisciplines" msprop:Generator_UserTableName="Disciplines">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="DisciplineId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="DisciplineId" msprop:Generator_ColumnPropNameInTable="DisciplineIdColumn" msprop:Generator_ColumnVarNameInTable="columnDisciplineId" msprop:Generator_UserColumnName="DisciplineId" type="xs:int" />
              <xs:element name="DisciplineName" msprop:Generator_ColumnPropNameInRow="DisciplineName" msprop:Generator_ColumnPropNameInTable="DisciplineNameColumn" msprop:Generator_ColumnVarNameInTable="columnDisciplineName" msprop:Generator_UserColumnName="DisciplineName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ExamResults" msprop:Generator_RowEvHandlerName="ExamResultsRowChangeEventHandler" msprop:Generator_RowDeletedName="ExamResultsRowDeleted" msprop:Generator_RowDeletingName="ExamResultsRowDeleting" msprop:Generator_RowEvArgName="ExamResultsRowChangeEvent" msprop:Generator_TablePropName="ExamResults" msprop:Generator_RowChangedName="ExamResultsRowChanged" msprop:Generator_RowChangingName="ExamResultsRowChanging" msprop:Generator_TableClassName="ExamResultsDataTable" msprop:Generator_RowClassName="ExamResultsRow" msprop:Generator_TableVarName="tableExamResults" msprop:Generator_UserTableName="ExamResults">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ResultId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="ResultId" msprop:Generator_ColumnPropNameInTable="ResultIdColumn" msprop:Generator_ColumnVarNameInTable="columnResultId" msprop:Generator_UserColumnName="ResultId" type="xs:int" />
              <xs:element name="StudentId" msprop:Generator_ColumnPropNameInRow="StudentId" msprop:Generator_ColumnPropNameInTable="StudentIdColumn" msprop:Generator_ColumnVarNameInTable="columnStudentId" msprop:Generator_UserColumnName="StudentId" type="xs:int" />
              <xs:element name="DisciplineId" msprop:Generator_ColumnPropNameInRow="DisciplineId" msprop:Generator_ColumnPropNameInTable="DisciplineIdColumn" msprop:Generator_ColumnVarNameInTable="columnDisciplineId" msprop:Generator_UserColumnName="DisciplineId" type="xs:int" />
              <xs:element name="Grade" msprop:Generator_ColumnPropNameInRow="Grade" msprop:Generator_ColumnPropNameInTable="GradeColumn" msprop:Generator_ColumnVarNameInTable="columnGrade" msprop:Generator_UserColumnName="Grade" type="xs:decimal" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Groups" msprop:Generator_RowEvHandlerName="GroupsRowChangeEventHandler" msprop:Generator_RowDeletedName="GroupsRowDeleted" msprop:Generator_RowDeletingName="GroupsRowDeleting" msprop:Generator_RowEvArgName="GroupsRowChangeEvent" msprop:Generator_TablePropName="Groups" msprop:Generator_RowChangedName="GroupsRowChanged" msprop:Generator_RowChangingName="GroupsRowChanging" msprop:Generator_TableClassName="GroupsDataTable" msprop:Generator_RowClassName="GroupsRow" msprop:Generator_TableVarName="tableGroups" msprop:Generator_UserTableName="Groups">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="GroupId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="GroupId" msprop:Generator_ColumnPropNameInTable="GroupIdColumn" msprop:Generator_ColumnVarNameInTable="columnGroupId" msprop:Generator_UserColumnName="GroupId" type="xs:int" />
              <xs:element name="GroupNumber" msprop:Generator_ColumnPropNameInRow="GroupNumber" msprop:Generator_ColumnPropNameInTable="GroupNumberColumn" msprop:Generator_ColumnVarNameInTable="columnGroupNumber" msprop:Generator_UserColumnName="GroupNumber">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Students" msprop:Generator_RowEvHandlerName="StudentsRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentsRowDeleted" msprop:Generator_RowDeletingName="StudentsRowDeleting" msprop:Generator_RowEvArgName="StudentsRowChangeEvent" msprop:Generator_TablePropName="Students" msprop:Generator_RowChangedName="StudentsRowChanged" msprop:Generator_RowChangingName="StudentsRowChanging" msprop:Generator_TableClassName="StudentsDataTable" msprop:Generator_RowClassName="StudentsRow" msprop:Generator_TableVarName="tableStudents" msprop:Generator_UserTableName="Students">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StudentId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="StudentId" msprop:Generator_ColumnPropNameInTable="StudentIdColumn" msprop:Generator_ColumnVarNameInTable="columnStudentId" msprop:Generator_UserColumnName="StudentId" type="xs:int" />
              <xs:element name="FullName" msprop:Generator_ColumnPropNameInRow="FullName" msprop:Generator_ColumnPropNameInTable="FullNameColumn" msprop:Generator_ColumnVarNameInTable="columnFullName" msprop:Generator_UserColumnName="FullName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="GroupId" msprop:Generator_ColumnPropNameInRow="GroupId" msprop:Generator_ColumnPropNameInTable="GroupIdColumn" msprop:Generator_ColumnVarNameInTable="columnGroupId" msprop:Generator_UserColumnName="GroupId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Disciplines" />
      <xs:field xpath="mstns:DisciplineId" />
    </xs:unique>
    <xs:unique name="ExamResults_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ExamResults" />
      <xs:field xpath="mstns:ResultId" />
    </xs:unique>
    <xs:unique name="Groups_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Groups" />
      <xs:field xpath="mstns:GroupId" />
    </xs:unique>
    <xs:unique name="Students_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Students" />
      <xs:field xpath="mstns:StudentId" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK__ExamResul__Disci__3E52440B" msdata:parent="Disciplines" msdata:child="ExamResults" msdata:parentkey="DisciplineId" msdata:childkey="DisciplineId" msprop:Generator_UserParentTable="Disciplines" msprop:Generator_UserChildTable="ExamResults" msprop:Generator_RelationVarName="relationFK__ExamResul__Disci__3E52440B" msprop:Generator_ChildPropName="GetExamResultsRows" msprop:Generator_ParentPropName="DisciplinesRow" msprop:Generator_UserRelationName="FK__ExamResul__Disci__3E52440B" />
      <msdata:Relationship name="FK__ExamResul__Stude__3D5E1FD2" msdata:parent="Students" msdata:child="ExamResults" msdata:parentkey="StudentId" msdata:childkey="StudentId" msprop:Generator_UserParentTable="Students" msprop:Generator_UserChildTable="ExamResults" msprop:Generator_RelationVarName="relationFK__ExamResul__Stude__3D5E1FD2" msprop:Generator_UserRelationName="FK__ExamResul__Stude__3D5E1FD2" msprop:Generator_ChildPropName="GetExamResultsRows" msprop:Generator_ParentPropName="StudentsRow" />
      <msdata:Relationship name="FK__Students__GroupI__38996AB5" msdata:parent="Groups" msdata:child="Students" msdata:parentkey="GroupId" msdata:childkey="GroupId" msprop:Generator_UserParentTable="Groups" msprop:Generator_UserChildTable="Students" msprop:Generator_RelationVarName="relationFK__Students__GroupI__38996AB5" msprop:Generator_ChildPropName="GetStudentsRows" msprop:Generator_ParentPropName="GroupsRow" msprop:Generator_UserRelationName="FK__Students__GroupI__38996AB5" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>